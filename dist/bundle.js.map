{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Task","constructor","id","title","text","priority","data","getTime","disabled","display","colorTask","this","createData","Date","fillContentTask","hours","getHours","minutes","getMinutes","day","getDate","mount","getMonth","year","getUTCFullYear","length","setColorTask","setDisabled","viewTask","task","document","createElement","className","innerHTML","removeTask","wrapper","getElementById","view","arrayToDoTask","querySelector","arrayComplectedTask","modalWindow","settingModal","navbar","toDoSectionHeader","complectedSectionHeader","initial","writeToDoTask","writeCompletedTask","viewArrayTask","arrayToDo","arrayComplected","children","remove","forEach","item","append","map","taskModalsCollections","querySelectorAll","setTasksLocalStorage","amountTask","textContent","slice","localStorage","setItem","JSON","stringify","setColorTheme","color","classList","add","checkBoolean","booleanValue","style","viewModalWindow","viewTaskModal","currentTaskToDoIndex","taskModal","setStateSettingModal","model","idTask","modalWindowForEdit","currentClickTask","modalSetting","colorTheme","currentClickTaskIndex","prevClickTaskIndex","idCurrentTask","idPrevTask","getTaskLocalStorage","inputs","Array","isArray","parse","getItem","input","checked","createTask","from","find","newTask","concat","toggleModalWindow","setCurrentClickTask","setCurrentTaskIndex","findIndex","toggleTaskModal","targetClick","e","stopPropagation","completeTask","filter","editTask","setSortUpDate","sort","a","b","setSortDownDate","controller","addTaskWrapper","addTask","addTaskHederClose","close","addTaskToggle","toDoArray","sortUpButton","sortDownButton","buttonSetting","themeToggle","addEventListener","handlerAddTaskToggle","target","handleClickTask","handleChooseTheme","preventDefault","trim"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import './style.scss'\nclass Task {\n  constructor ({\n    id,\n    title,\n    text,\n    priority,\n    data,\n    getTime,\n    disabled,\n    display,\n    colorTask\n  }) {\n    this.id = id\n    this.title = title\n    this.text = text\n    this.priority = priority\n    this.data = data || this.createData()\n    this.getTime = getTime || new Date().getTime()\n    this.disabled = disabled || ''\n    this.display = display || 'grid'\n    this.colorTask = colorTask || 'red'\n  }\n\n  fillContentTask () {\n    return `<div class=\"task__information-block\">\n    <div class=\"task__header\">\n      <h4 class=\"task__title\">${this.title}</h4>\n      <p class=\"task__priority\">${this.priority} priority</p>\n      <p class=\"task__data\">${this.data}</p>\n    </div>\n    <p class=\"task__text\">${this.text}</p>\n  </div>\n  <div class=\"task__setting\">\n    <div class=\"task__modal\">\n      <div class=\"task__modal-option task__modal-option_complete_green\">\n        Complete\n      </div>\n      <div class=\"task__modal-option task__modal-option_edit_turquoise\">\n        Edit\n      </div>\n      <div class=\"task__modal-option task__modal-option_delete_red\">\n        Delete\n      </div>\n    </div>\n    <button id=${this.id} class=\"task__button\" style=\"display:${this.display}\">\n      <i class=\"fas fa-ellipsis-v\"></i>\n    </button>\n  </div>`\n  }\n\n  createData () {\n    let hours = new Date().getHours() + ''\n    let minutes = new Date().getMinutes() + ''\n    let day = new Date().getDate() + ''\n    let mount = new Date().getMonth() + 1 + ''\n    const year = new Date().getUTCFullYear()\n    if (hours.length === 1) hours = '0' + hours\n    if (minutes.length === 1) minutes = '0' + minutes\n    if (day.length === 1) day = '0' + day\n    if (mount.length === 1) mount = '0' + mount\n    return `${hours}:${minutes} ${day}:${mount}:${year}`\n  }\n\n  setColorTask (priority) {\n    switch (priority) {\n      case 'Low':\n        return 'green'\n      case 'Medium':\n        return 'yellow'\n      default:\n        return 'red'\n    }\n  }\n\n  setDisabled (disabled) {\n    if (disabled) {\n      this.display = 'none'\n      this.disabled = 'disabled'\n    } else {\n      this.display = 'grid'\n      this.disabled = ''\n    }\n  }\n\n  viewTask (disabled) {\n    this.setDisabled(disabled)\n    this.colorTask = this.setColorTask(this.priority)\n    this.task = document.createElement('div')\n    this.task.className = `task task${this.id} task_${this.colorTask} task_${this.disabled}`\n    this.task.innerHTML = this.fillContentTask()\n    return this.task\n  }\n\n  removeTask () {\n    delete this.task\n  }\n}\n\nclass Controller {\n  constructor (model, wrapper) {\n    this.model = model\n    this.wrapper = wrapper\n    this.addTaskWrapper = wrapper.querySelector('.add-task-wrapper')\n    this.modalWindow = wrapper.querySelector('.modal-window')\n    this.addTask = wrapper.querySelector('.add-task')\n    this.addTaskHederClose = wrapper.querySelector(\n      '.add-task__header-close-button'\n    )\n    this.close = wrapper.querySelector('.close')\n    this.addTaskToggle = wrapper.querySelector('.add-task-toggle')\n    this.toDoArray = wrapper.querySelector('.todo-section__array')\n    this.sortUpButton = wrapper.querySelector('.sort__button_up')\n    this.sortDownButton = wrapper.querySelector('.sort__button_down')\n    this.buttonSetting = wrapper.querySelector('.setting__button')\n    this.themeToggle = wrapper.querySelector('.color-theme-toggle__options')\n  }\n\n  initial () {\n    // modal window\n    this.addTaskWrapper.addEventListener('click', () =>\n      this.model.toggleModalWindow()\n    )\n    this.modalWindow.addEventListener('click', () =>\n      this.model.toggleModalWindow()\n    )\n    this.addTask.addEventListener('click', (e) => e.stopPropagation())\n    this.addTaskHederClose.addEventListener('click', () =>\n      this.model.toggleModalWindow()\n    )\n    // Modal window add task or Edit\n    this.close.addEventListener('click', () => this.model.toggleModalWindow())\n    this.addTaskToggle.addEventListener('click', (e) =>\n      this.handlerAddTaskToggle(e)\n    )\n    // close modal for button in the task\n    this.wrapper.addEventListener('click', (e) => {\n      if (e.target.className !== 'task__button') {\n        this.model.toggleTaskModal('wrapper', e)\n      }\n    })\n    // click on task with handler on parent\n    this.toDoArray.addEventListener('click', (e) => this.handleClickTask(e))\n    // sort\n    this.sortUpButton.addEventListener('click', () =>\n      this.model.setSortUpDate()\n    )\n    this.sortDownButton.addEventListener('click', () =>\n      this.model.setSortDownDate()\n    )\n    // setting modal\n    this.buttonSetting.addEventListener('click', () =>\n      this.model.setStateSettingModal()\n    )\n    this.themeToggle.addEventListener('click', (e) => this.handleChooseTheme(e))\n\n    this.getTaskLocalStorage()\n  }\n\n  handlerAddTaskToggle (e) {\n    e.preventDefault()\n    const inputs = this.addTask.querySelectorAll('input')\n    if (inputs[0].value && inputs[1].value) {\n      this.model.createTask(inputs)\n      this.model.toggleModalWindow()\n      inputs[0].value = ''\n      inputs[1].value = ''\n    }\n  }\n\n  handleClickTask (e) {\n    if (e.target.className === 'task__button') {\n      this.model.setCurrentClickTask(e.target.id)\n      this.model.setCurrentTaskIndex(e.target.id)\n      this.model.toggleTaskModal('task__button', e)\n    } else if (e.target.innerHTML.trim() === 'Complete') {\n      this.model.completeTask()\n    } else if (e.target.innerHTML.trim() === 'Edit') {\n      this.model.editTask(this.addTask.querySelectorAll('input'))\n    } else if (e.target.innerHTML.trim() === 'Delete') {\n      this.model.removeTask()\n    }\n  }\n\n  handleChooseTheme (e) {\n    if (e.target.value) this.model.setColorTheme(e.target.value)\n  }\n\n  getTaskLocalStorage () {\n    const inputs = this.themeToggle.querySelectorAll('input')\n    this.model.getTaskLocalStorage(inputs)\n  }\n}\nclass Model {\n  constructor (view) {\n    this.view = view\n    this.arrayToDoTask = []\n    this.arrayComplectedTask = []\n    this.idTask = 1\n    this.modalWindow = false\n    this.modalWindowForEdit = false\n    this.taskModal = false\n    this.currentClickTask = null\n    this.modalSetting = false\n    this.colorTheme = 'light'\n    this.currentClickTaskIndex = null\n    this.prevClickTaskIndex = null\n    this.idCurrentTask = null\n    this.idPrevTask = null\n  }\n\n  getTaskLocalStorage (inputs) {\n    // tasks\n    if (\n      Array.isArray(JSON.parse(localStorage.getItem('arrayToDo'))) &&\n      Array.isArray(JSON.parse(localStorage.getItem('arrayComplected')))\n    ) {\n      this.arrayToDoTask = JSON.parse(localStorage.getItem('arrayToDo'))\n      this.arrayComplectedTask = JSON.parse(\n        localStorage.getItem('arrayComplected')\n      )\n\n      this.arrayToDoTask = this.arrayToDoTask.map((task) => new Task(task))\n      this.arrayComplectedTask = this.arrayComplectedTask.map(\n        (task) => new Task(task)\n      )\n    }\n    this.view.viewArrayTask(this.arrayToDoTask, this.arrayComplectedTask)\n\n    // idTask\n    this.idTask = localStorage.getItem('idTask') || 1\n\n    // color theme\n    const colorTheme = localStorage.getItem('colorTheme') || 'light'\n\n    for (const input of inputs) {\n      if (input.value === colorTheme) input.checked = true\n    }\n    this.setColorTheme(colorTheme)\n  }\n\n  createTask (inputs) {\n    if (inputs && inputs[0].value && inputs[1].value) {\n      const priority = Array.from(inputs).find((item) => item.checked)\n      // Edit exist task\n      if (this.modalWindowForEdit) {\n        this.currentClickTask.title = inputs[0].value\n        this.currentClickTask.text = inputs[1].value\n        this.currentClickTask.priority = priority.value\n      } else {\n        // add new task\n        const task = {\n          id: this.idTask++,\n          title: inputs[0].value,\n          text: inputs[1].value,\n          priority: priority.value\n        }\n        const newTask = new Task(task)\n        this.arrayToDoTask = this.arrayToDoTask.concat(newTask)\n        localStorage.setItem('idTask', this.idTask)\n      }\n      this.view.viewArrayTask(this.arrayToDoTask, this.arrayComplectedTask)\n    }\n    this.modalWindowForEdit = false\n  }\n\n  toggleModalWindow () {\n    this.modalWindow = !this.modalWindow\n    this.view.viewModalWindow(this.modalWindow)\n  }\n\n  setCurrentClickTask (id) {\n    this.currentClickTask = this.arrayToDoTask.find((item) => item.id === +id)\n  }\n\n  setCurrentTaskIndex (id) {\n    this.currentClickTaskIndex = this.arrayToDoTask.findIndex(\n      (item) => item.id === +id\n    )\n    this.idPrevTask = this.idCurrentTask\n    this.idCurrentTask = +id\n  }\n\n  toggleTaskModal (targetClick, e) {\n    // click only button\n    if (\n      (targetClick === 'task__button' &&\n        this.idCurrentTask !== this.idPrevTask) ||\n      (targetClick === 'task__button' &&\n        this.idCurrentTask === this.idPrevTask &&\n        this.taskModal === false)\n    ) {\n      e.stopPropagation()\n      this.taskModal = true\n      this.view.viewTaskModal(this.taskModal, this.currentClickTaskIndex)\n      // click on wrapper or same button\n    } else if (\n      (targetClick === 'wrapper' && this.taskModal) ||\n      (targetClick === 'task__button' && this.idCurrentTask === this.idPrevTask)\n    ) {\n      this.taskModal = false\n      this.view.viewTaskModal(this.taskModal)\n    }\n  }\n\n  setStateSettingModal () {\n    this.modalSetting = !this.modalSetting\n    this.view.setStateSettingModal(this.modalSetting)\n  }\n\n  setColorTheme (color) {\n    this.colorTheme = color\n    this.view.setColorTheme(this.colorTheme)\n  }\n\n  completeTask () {\n    this.arrayToDoTask = this.arrayToDoTask.filter(\n      (item) => item.id !== this.currentClickTask.id\n    )\n    this.arrayComplectedTask = this.arrayComplectedTask.concat(\n      this.currentClickTask\n    )\n\n    this.view.viewArrayTask(this.arrayToDoTask, this.arrayComplectedTask)\n  }\n\n  editTask (inputs) {\n    this.modalWindowForEdit = true\n\n    this.toggleModalWindow()\n\n    inputs[0].value = this.currentClickTask.title\n    inputs[1].value = this.currentClickTask.text\n    for (const input of inputs) {\n      if (input.value === this.currentClickTask.priority) input.checked = true\n    }\n  }\n\n  removeTask () {\n    this.arrayToDoTask = this.arrayToDoTask.filter(\n      (item) => item.id !== this.currentClickTask.id\n    )\n\n    this.view.viewArrayTask(this.arrayToDoTask)\n  }\n\n  setSortUpDate () {\n    this.arrayToDoTask = this.arrayToDoTask.sort((a, b) =>\n      a.getDate > b.getDate ? 1 : 1\n    )\n\n    this.view.viewArrayTask(this.arrayToDoTask)\n  }\n\n  setSortDownDate () {\n    this.arrayToDoTask = this.arrayToDoTask.sort((a, b) =>\n      a.getDate < b.getDate ? 1 : -1\n    )\n\n    this.view.viewArrayTask(this.arrayToDoTask)\n  }\n}\nclass View {\n  constructor (wrapper) {\n    this.wrapper = wrapper\n    this.arrayToDoTask = wrapper.querySelector('.todo-section__array')\n    this.arrayComplectedTask = wrapper.querySelector(\n      '.complected-section__array'\n    )\n    this.modalWindow = wrapper.querySelector('.modal-window')\n    this.settingModal = wrapper.querySelector('.setting__modal-window')\n    this.navbar = wrapper.querySelector('.navbar')\n    this.toDoSectionHeader = wrapper.querySelector('.todo-section__header')\n    this.complectedSectionHeader = wrapper.querySelector(\n      '.complected-section__header'\n    )\n  }\n\n  initial () {\n    this.writeToDoTask(0)\n    this.writeCompletedTask(0)\n  }\n\n  viewArrayTask (arrayToDo, arrayComplected) {\n    // clear DOM\n    if (arrayToDo) {\n      while (this.arrayToDoTask.children.length) {\n        this.arrayToDoTask.children[0].remove()\n      }\n      // render arrays in DOM\n      arrayToDo.forEach((item) => this.arrayToDoTask.append(item.viewTask()))\n    }\n    // same if task completed\n    if (arrayComplected) {\n      while (this.arrayComplectedTask.children.length) {\n        this.arrayComplectedTask.children[0].remove()\n      }\n      arrayComplected.map((item) =>\n        this.arrayComplectedTask.append(item.viewTask(true))\n      )\n    }\n\n    // taskModel had created\n    this.taskModalsCollections = this.wrapper.querySelectorAll('.task__modal')\n\n    // amount tasks\n    if (arrayToDo) {\n      this.writeToDoTask(arrayToDo.length)\n    }\n    if (arrayComplected) {\n      this.writeCompletedTask(arrayComplected.length)\n    }\n\n    // localStorage\n    this.setTasksLocalStorage(arrayToDo, arrayComplected)\n  }\n\n  writeToDoTask (amountTask) {\n    this.toDoSectionHeader.textContent =\n      this.toDoSectionHeader.textContent.slice(0, 4) + ` (${amountTask})`\n  }\n\n  writeCompletedTask (amountTask) {\n    this.complectedSectionHeader.textContent =\n      this.complectedSectionHeader.textContent.slice(0, 10) + ` (${amountTask})`\n  }\n\n  setTasksLocalStorage (arrayToDo, arrayComplected) {\n    localStorage.setItem('arrayToDo', JSON.stringify(arrayToDo))\n    if (arrayComplected) {\n      localStorage.setItem('arrayComplected', JSON.stringify(arrayComplected))\n    }\n  }\n\n  setColorTheme (color) {\n    if (this.wrapper.classList[1]) {\n      this.wrapper.classList.remove(this.wrapper.classList[1])\n    }\n    this.wrapper.classList.add(`wrapper__theme_${color}`)\n\n    if (this.navbar.classList[1]) {\n      this.navbar.classList.remove(this.navbar.classList[1])\n    }\n    this.navbar.classList.add(`navbar__theme_${color}`)\n\n    localStorage.setItem('colorTheme', color)\n  }\n\n  checkBoolean (booleanValue, modalWindow) {\n    if (booleanValue) modalWindow.style.display = 'grid'\n    else modalWindow.style.display = ''\n  }\n\n  viewModalWindow (booleanValue) {\n    this.checkBoolean(booleanValue, this.modalWindow)\n  }\n\n  viewTaskModal (booleanValue, currentTaskToDoIndex) {\n    if (this.taskModalsCollections) {\n      // close previously modal\n      for (const item of this.taskModalsCollections) {\n        item.style.display = ''\n      }\n      // define current task\n      this.taskModal = this.taskModalsCollections[currentTaskToDoIndex]\n      if (this.taskModal) this.checkBoolean(booleanValue, this.taskModal)\n    }\n  }\n\n  setStateSettingModal (booleanValue) {\n    this.checkBoolean(booleanValue, this.settingModal)\n  }\n}\n\nconst wrapper = document.getElementById('wrapper')\nconst view = new View(wrapper)\nconst model = new Model(view)\nconst controller = new Controller(model, wrapper)\n\nview.initial()\ncontroller.initial()\n"],"sourceRoot":""}